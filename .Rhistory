xsc = scale(x)
hc.scale.complete = hclust(dist(xsc), method='complete')
par(mfrow=c(1, 1))
plot(hc.scale.complete, main='Scaled Complete Linkage', xlab='', ylab='', cex=0.9)
x = matrix(rnorm(30*3), ncol=3)
dd = as.dist(1 - cor(t(x)))
hc.dd.complete = hclust(dd, method='complete')
plot(hc.dd.complete, main='Correlation Distance - Complete Linkage', xlab='', ylab='', cex=0.9)
library(ISLR)
nci.labs = NCI60$labs
nci.data = NCI60$data
View(nci.data)
dim(nci.data)
dim(nci.data)
table(nci.labs)
# ------------------------------ 10.6.1 ------------------------------
pr.out = prcomp(nci.data, scale=TRUE)
plot(pr.out$x[, 1:2], col=cols(nci.labs), xlab='Z1', ylab='Z2', pch=19)
cols <- function(vec){
cols = rainbow(length(unique(vec)))
return( cols[as.numeric(as.factor(vec))] )
}
plot(pr.out$x[, 1:2], col=cols(nci.labs), xlab='Z1', ylab='Z2', pch=19)
plot(pr.out$x[, c(1, 3)], col=cols(nci.labs), xlab='Z1', ylab='Z2', pch=19)
View(data[1:2, 1:4])
View(nci.data[1:2, 1:4])
summary(pr.out)
plot(pr.out)
pve = (pr.out$sdev)^2 / sum((pr.out$sdev)^2)
pve = (pr.out$sdev)^2 / sum((pr.out$sdev)^2)
par(mfrow=c(1, 2))
plot(pve, ylim=c(0, 1), type='b', xlab='Principal Component', ylab='Proportion of Variance Explained')
plot(cumsum(pve), ylim=c(0, 1), type='b', xlab='Principal Component', ylabo='Cumulative Proportion of Variance Explained')
pve = (pr.out$sdev)^2 / sum((pr.out$sdev)^2)
par(mfrow=c(1, 2))
plot(pve, ylim=c(0, 1), type='b', xlab='Principal Component', ylab='Proportion of Variance Explained')
plot(cumsum(pve), ylim=c(0, 1), type='b', xlab='Principal Component', ylab='Cumulative Proportion of Variance Explained')
summary(pr.out)
# ------------------------------ 10.6.2 ------------------------------
sd.data = scale(nci.data)
# ------------------------------ 10.6.2 ------------------------------
sd.data = scale(nci.data)
hc.complete = hclust(dist(sd.data), method='complete')
hc.single = hclust(dist(sd.data), method='single')
hc.average = hclust(dist(sd.data), method='average')
par(mfrow=c(1, 3))
plot(hc.complete, labels=nci.labs, xlab='', ylab='', main='Complete Linkage')
plot(hc.single, labels=nci.labs, xlab='', ylab='', main='Single Linkage')
plot(hc.average, labels=nci.labs, xlab='', ylab='', main='Average Linkage')
hc.complete.cut = cutree(hc.complete, 4)
table(hc.complete.cut, nci.labs)
par(mfrow=c(1, 1))
plot(hc.complete, labels=nci.labs, xlab='', ylab='', main='Complete Linkage')
abline(h=139, col='red')
hc.complete
?kmeans
set.seed(1)
km.out = kmeans(sd.data, centers=4, nstart=20)
table(km.cluster, nci.labs)
km.cluster = km.out$cluster
table(km.cluster, nci.labs)
table(km.cluster, hc.complete.cut)
set.seed(2)
km.out = kmeans(sd.data, centers=4, nstart=20)
km.cluster = km.out$cluster
table(km.cluster, hc.complete.cut)
hc.score.cp = hclust(dist(pr.out$x[, 1:5]), method='complete')
plot(hc.score.cp, labels=nci.labs, xlab='', ylab='', main='Principal Component Score - Complete Linkage')
table(cutree(hc.score.cp, 4), nci.labs)
states = rownames(USArrests)
vars = colnames(USArrests)
apply(USArrests, 2, mean)
# Murder  Assault UrbanPop     Rape
# 7.788  170.760   65.540   21.232
apply(USArrests, 2, var)
# Murder    Assault   UrbanPop       Rape
# 18.97047 6945.16571  209.51878   87.72916
pr.out = prcomp(USArrests, scale=TRUE)
names(pr.out)
# "sdev"     "rotation" "center"   "scale"    "x"
pr.out$center
# Murder  Assault UrbanPop     Rape
# 7.788  170.760   65.540   21.232
(pr.out$scale)^2
# Murder    Assault   UrbanPop       Rape
# 18.97047 6945.16571  209.51878   87.72916
pr.out$rotation
#           PC1        PC2        PC3         PC4
# Murder   -0.5358995  0.4181809 -0.3412327  0.64922780
# Assault  -0.5831836  0.1879856 -0.2681484 -0.74340748
# UrbanPop -0.2781909 -0.8728062 -0.3780158  0.13387773
# Rape     -0.5434321 -0.1673186  0.8177779  0.08902432
dim(pr.out$x)
# [1] 50  4
biplot(pr.out, scale=0)
pr.out$rotation = -pr.out$rotation
pr.out$x = -pr.out$x
biplot(pr.out, scale=0)
pr.out$sdev
# [1] 1.5748783 0.9948694 0.5971291 0.4164494
pr.var = (pr.out$sdev)^2
pr.var
# [1] 2.4802416 0.9897652 0.3565632 0.1734301
pve = pr.var/sum(pr.var)
pve
# [1] 0.62006039 0.24744129 0.08914080 0.04335752
plot(pve, type='b', ylim=c(0, 1), xlab='Principal Component', ylab='Proportion of Variance Explained')
plot(cumsum(pve), type='b', ylim=c(0, 1), xlab='Principal Component', ylab='Cumulative Proportion of Variance Explained')
x = scale(USArrests)
View(x)
View(x)
apply(x, 2, var)
set.seed(1)
control = matrix(rnorm(1000*50), ncol=50)
treatment = matrix(rnorm(1000*50), ncol=50)
x = cbind(control, treatment)
View(x)
View(x[1:10, ])
x[1, ] = seq(-18, 18-0.36, 0.36)
View(x[1:10, ])
pr.out = prcomp(scale(x))
a = summary(pr.out)
a$importance
summary(pr.out)$importance[, 1]
summary(pr.out)$importance[, 1]
new.feature = c(rep(1, 50), rep(0, 50))
x = rbind(x, new.feature)
pr.out = prcomp(scale(x))
summary(pr.out)$importance[, 1]
new.feature = c(rep(10, 50), rep(0, 50))
x = rbind(x, new.feature)
pr.out = prcomp(scale(x))
summary(pr.out)$importance[, 1]
set.seed(1)
control = matrix(rnorm(1000*50), ncol=50)
treatment = matrix(rnorm(1000*50), ncol=50)
x = cbind(control, treatment)
x[1, ] = seq(-18, 18-0.36, 0.36)
# suppose one gene is activated/de-activated by one type of machine
# and also the gene is related to time of process
pr.out = prcomp(scale(x))
summary(pr.out)$importance[, 1]
# the first principle component explains 9.911% of total variance
new.feature = c(rep(10, 50), rep(0, 50))
x = rbind(x, new.feature)
pr.out = prcomp(scale(x))
summary(pr.out)$importance[, 1]
library(ISLR)
a = USArrests
View(a)
X = scale(USArrests)
rm(a)
View(X)
colMeans(X)
?as.dist
?hclust
# Let's use the complete linkage method
dist = as.dist(USArrests)
hc.eu = hclust(dist, method='complete')
plot(hc.eu)
# Let's use the complete linkage method
dist = as.dist(X)
?dist()
# Let's use the complete linkage method
diss = dist(X)
hc.eu = hclust(diss, method='complete')
plot(hc.eu)
plot(hc.eu, xlab='', ylab='', main='Euclidean Complete Linkage')
library(ISLR)
X = scale(USArrests)
# Let's use the complete linkage method
# Euclidean Complete Linkage
diss = dist(X)
hc.eu = hclust(diss, method='complete')
plot(hc.eu, xlab='', ylab='', main='Euclidean Complete Linkage')
# Correlation Complete Linkage
diss = as.dist(cor(X))
hc.cor = clust(diss, method='complete')
plot(hc.cor, xlab='', ylab='', main='Correlation Complete Linkage')
library(ISLR)
X = scale(USArrests)
# Let's use the complete linkage method
# Euclidean Complete Linkage
diss = dist(X)
hc.eu = hclust(diss, method='complete')
plot(hc.eu, xlab='', ylab='', main='Euclidean Complete Linkage')
# Correlation Complete Linkage
diss = as.dist(cor(X))
hc.cor = hclust(diss, method='complete')
plot(hc.cor, xlab='', ylab='', main='Correlation Complete Linkage')
diss = as.dist(cor(t(X)))
hc.cor = hclust(diss, method='complete')
plot(hc.cor, xlab='', ylab='', main='Correlation Complete Linkage')
?scale
library(ISLR)
X = scale(t(USArrests))
View(X)
colMeans(X)
apply(X, 2, sdev)
apply(X, 2, stdev)
apply(X, 2, std)
apply(X, 2, sd)
library(ISLR)
X = scale(t(USArrests))
# Let's use the complete linkage method
# Euclidean Complete Linkage
diss = dist(t(X))
hc.eu = hclust(diss, method='complete')
plot(hc.eu, xlab='', ylab='', main='Euclidean Complete Linkage')
# Correlation Complete Linkage
diss = as.dist(cor(X))
hc.cor = hclust(diss, method='complete')
plot(hc.cor, xlab='', ylab='', main='Correlation Complete Linkage')
library(ISLR)
X = scale(t(USArrests))
# Let's use the complete linkage method
# Euclidean Complete Linkage
diss.eu = dist(t(X))
hc.eu = hclust(diss.eu, method='complete')
plot(hc.eu, xlab='', ylab='', main='Euclidean Complete Linkage')
# Correlation Complete Linkage
diss.cor = as.dist(cor(X))
hc.cor = hclust(diss.cor, method='complete')
plot(hc.cor, xlab='', ylab='', main='Correlation Complete Linkage')
# Euclidean Complete Linkage
diss.eu = dist(X)
# Correlation Complete Linkage
diss.cor = as.dist(cor(t(X)))
diss.eu
diss.cor
library(ISLR)
X = scale(USArrests)
# Let's use the complete linkage method
# Euclidean Complete Linkage
diss.eu = dist(X)^2
hc.eu = hclust(diss.eu, method='complete')
plot(hc.eu, xlab='', ylab='', main='Euclidean Complete Linkage')
# Correlation Complete Linkage
diss.cor = as.dist(cor(t(X)))
hc.cor = hclust(diss.cor, method='complete')
plot(hc.cor, xlab='', ylab='', main='Correlation Complete Linkage')
library(ISLR)
X = scale(USArrests)
# Let's use the complete linkage method
# Euclidean Complete Linkage
diss.eu = dist(X)^2
hc.eu = hclust(diss.eu, method='complete')
plot(hc.eu, xlab='', ylab='', main='Euclidean Complete Linkage')
# Correlation Complete Linkage
diss.cor = as.dist(1-cor(t(X)))
hc.cor = hclust(diss.cor, method='complete')
plot(hc.cor, xlab='', ylab='', main='Correlation Complete Linkage')
library(ISLR)
X = scale(USArrests)
# Let's use the complete linkage method
# Euclidean Complete Linkage
diss.eu = dist(X)
hc.eu = hclust(diss.eu, method='complete')
plot(hc.eu, xlab='', ylab='', main='Euclidean Complete Linkage')
# Correlation Complete Linkage
diss.cor = as.dist(1-cor(t(X)))
hc.cor = hclust(diss.cor, method='complete')
plot(hc.cor, xlab='', ylab='', main='Correlation Complete Linkage')
lm.fit = lm(diss.eu~diss.cor)
lm.fit
summary(lm.fit)
lm.fit2 = lm(diss.cor~diss.eu)
summary(lm.fit2)
rm(lm.fit, lm.fit2)
dist.cor
diss.cor
dim(diss.cor)
View(diss.cor)
names(diss.cor)
plot(diss.cor, diss.eu)
plot(diss.eu, diss.cor)
library(ISLR)
X = scale(USArrests)
# Let's use the complete linkage method
# Euclidean Complete Linkage
diss.eu = dist(X)^2
hc.eu = hclust(diss.eu, method='complete')
plot(hc.eu, xlab='', ylab='', main='Euclidean Complete Linkage')
# Correlation Complete Linkage
diss.cor = as.dist(1-cor(t(X)))
hc.cor = hclust(diss.cor, method='complete')
plot(hc.cor, xlab='', ylab='', main='Correlation Complete Linkage')
# !!!
# Somehow, the two plots are not equivalent
plot(diss.eu, diss.cor)
plot(diss.cor, diss.eu)
library(ISLR)
X = scale(USArrests)
# Let's use the complete linkage method
# Euclidean Complete Linkage
diss.eu = dist(X)
hc.eu = hclust(diss.eu, method='complete')
plot(hc.eu, xlab='', ylab='', main='Euclidean Complete Linkage')
# Correlation Complete Linkage
diss.cor = as.dist(1-cor(t(X)))
hc.cor = hclust(diss.cor, method='complete')
plot(hc.cor, xlab='', ylab='', main='Correlation Complete Linkage')
# Unfortunately, the two plots are not equivalent
plot(diss.eu, diss.cor)
library(ISLR)
X = scale(USArrests)
pr.1 = prcomp(X)
summary(prcomp)
summary(pr.1)
pr.1$sdev
library(ISLR)
X = scale(USArrests)
# ----------------------- (a) -----------------------
pr1 = prcomp(X)
pr1.pve = pr1$sdev / sum(pr1$sdev)
library(ISLR)
X = scale(USArrests)
# ----------------------- (a) -----------------------
pr = prcomp(X)
pr.pve1 = pr$sdev / sum(pr$sdev)
# ----------------------- (b) -----------------------
pr$rotation
# ----------------------- (b) -----------------------
pr.scores = X %*% pr$rotation
pr.pve2 = colSums(pr.scores^2) / sum(pr.scores^2)
View(pr.scores)
pr = prcomp(X)
pr.pve1 = pr$sdev^2 / sum(pr$sdev^2)
library(ISLR)
X = scale(USArrests)
# ----------------------- (a) -----------------------
pr = prcomp(X)
pr.pve1 = pr$sdev^2 / sum(pr$sdev^2)
# ----------------------- (b) -----------------------
pr.scores = X %*% pr$rotation
pr.pve2 = colSums(pr.scores^2) / sum(pr.scores^2)
plot(pr.pve1, type='b', col='red', xlab='PC', ylab='PVE')
lines(pr.pve2, type='b', col='blue')
legend('topright', legend=c('(a)', '(b)'), col=c('red', 'blue'))
pr.pve1
pr.pve2
library(ISLR)
library(ISLR)
# ----------------------- (a) -----------------------
diss.1 = dist(USArrests)
hc.1 = hclust(diss.1, method='complete')
plot(hc.1, xlab='', ylab='')
?cutree()
library(ISLR)
# ----------------------- (a) -----------------------
diss1 = dist(USArrests)
hc1 = hclust(diss1, method='complete')
plot(hc1, xlab='', ylab='')
# ----------------------- (b) -----------------------
tree1.2 = cutree(hc1, 3)
summary(tree1.2)
tree1.2
# ----------------------- (b) -----------------------
abline(h=150, col='red')
tree1.2[1]
tree1.2[ tree1.2==1 ]
g1 = tree1.2[ tree1.2==1 ]
g2 = tree1.2[ tree1.2==2 ]
g3 = tree1.2[ tree1.2==3 ]
g1
names(g1)
g1 = names(tree1.2[ tree1.2==1 ])
g2 = names(tree1.2[ tree1.2==2 ])
g3 = names(tree1.2[ tree1.2==3 ])
g1
g2
g3
# ----------------------- (c) -----------------------
X = scale(USArrests)
diss2 = dist(X)
hc2 = hclust(diss2, method='complete')
plot(hc2)
a = USArrests
View(a)
set.seed(1)
# --------------------------------- (a) ---------------------------------
n = 60
p = 50
X = matrix( rnorm(n*p), ncol=p )
y = c(rep(0, n/3), rep(1, n/3), rep(2, n/3))
X[y==1, ] = X[y==1, ] + 1
X[y==2, ] = X[y==2, ] + 2
?prcomp
# --------------------------------- (b) ---------------------------------
pr = prcomp(X)
pr$rotation
dim(pr$rotation)
# --------------------------------- (b) ---------------------------------
pr = prcomp(X)
pr.score = X %*% pr$rotation
plot(pr.score[, 1:2], col=(4-y), xlab='PC1', ylab='PC2')
summary(pr)
?kmeans
km = kmeans(X, centers=3, nstart=20)
km$cluster
table(pred=km, actual=y)
table(pred=km$cluster, actual=y)
# --------------------------------- (d) ---------------------------------
km.2 = kmeans(X, centers=2, nstart=20)
table(pred=km.2$cluster, actual=y)
km.4 = kmeans(X, centers=4, nstart=20)
table(pred=km.4$cluster, actual=y)
# --------------------------------- (f) ---------------------------------
km.3.pr = kmeans(pr.score[, 1:2], centers=3, nstart=20)
table(pred=km.3.pr$cluster, actual=y)
# --------------------------------- (g) ---------------------------------
X = scale(X)
km.3.std = kmeans(X, centers=3, nstart=20)
table(pred=km.3.std, actual=y)
# --------------------------------- (g) ---------------------------------
X = scale(X)
km.3.std = kmeans(X, centers=3, nstart=20)
table(pred=km.3.std$cluster, actual=y)
# ------------------------------ (a) ------------------------------
gene = read.csv('./Data/Ch10Ex11.csv', header=F)
View(gene)
# ------------------------------ (b) ------------------------------
diss = as.dist(1-cor(gene))
hc.cmp = hclust(diss, method='complete')
plot(hc.cmp)
plot(hc.cmp, xlab='')
?hclust
# ------------------------------ (a) ------------------------------
gene = read.csv('./Data/Ch10Ex11.csv', header=F)
# ------------------------------ (b) ------------------------------
diss = as.dist(1-cor(gene))
hc.cmp = hclust(diss, method='complete')
plot(hc.cmp, xlab='', main='Complete Linkage')
hc.single = hclust(diss, method='single')
plot(hc.single, xlab='', main='Single Linkage')
hc.avg = hclust(diss, method='average')
plot(hc.avg, xlab='', main='Average Linkage')
hc.cent = hclust(diss, method='centroid')
plot(hc.cent, xlab='', main='Centroid Linkage')
hc.cmp$labels
hc.cmp$order
hc.cmp$merge
# ------------------------------ (c) ------------------------------
# one method is to compare the distribution of each gene given the two groups
cutree(hc.cmp, 2)
pr = prcomp(gene)
pr$rotation
summary(pr)
dim(pr$rotation)
which.max(pr$rotation[, 1])
a = pr$rotation
View(a)
which.max( abs(pr$rotation[, 1]) )
gene.max = which.max( abs(pr$rotation[, 1]) )
clust = cutree(hc.cmp, 2)
clust = cutree(hc.cmp, 2)
plot(x=clust, y=gene[gene.max, ], xlab='Group', ylab='Gene 22')
clust
plot(dist.1, col='red', xlab='Gene 22', ylab='Density')
clust = cutree(hc.cmp, 2)
dist.1 = density(gene[gene.max, which(clust==1) ] )
dist.2 = density(gene[gene.max, which(clust==2) ] )
plot(dist.1, col='red', xlab='Gene 22', ylab='Density')
gene[gene.max, which(clust==1) ]
class( gene[gene.max, which(clust==1) ] )
dist.1 = density( as.numeric( gene[gene.max, which(clust==1) ] ) )
dist.2 = density( as.numeric( gene[gene.max, which(clust==2) ] ) )
plot(dist.1, col='red', xlab='Gene 22', ylab='Density')
lines(dist.2, col='blue')
x.lim = c( min(gene[gene.max, ]), max(gene[gene.max, ]) )
x.lim
dist.1$x
# ------------------------------ (a) ------------------------------
gene = read.csv('./Data/Ch10Ex11.csv', header=F)
# ------------------------------ (b) ------------------------------
diss = as.dist(1-cor(gene))
hc.cmp = hclust(diss, method='complete')
plot(hc.cmp, xlab='', main='Complete Linkage')
hc.single = hclust(diss, method='single')
plot(hc.single, xlab='', main='Single Linkage')
hc.avg = hclust(diss, method='average')
plot(hc.avg, xlab='', main='Average Linkage')
hc.cent = hclust(diss, method='centroid')
plot(hc.cent, xlab='', main='Centroid Linkage')
# The grouping does differ by different linkage at choice
# By far the most reasonable result is obtained using complete linkage
# Using this linkage, the samples are separated into two groups
# ------------------------------ (c) ------------------------------
# one method is to compare the distribution of each gene given the two groups
# but for this problem, since there are too many genes, we can check the
# loading factor of the first PC
# then cross-check by plotting its distribution
pr = prcomp(gene)
gene.max = which.max( abs(pr$rotation[, 1]) )     # gene #22
clust = cutree(hc.cmp, 2)
dist.1 = density( as.numeric( gene[gene.max, which(clust==1) ] ) )
dist.2 = density( as.numeric( gene[gene.max, which(clust==2) ] ) )
x.lim = c( min(dist.1$x, dist.2$x), max(dist.1$x, dist.2$x) )
y.lim = c( min(dist.1$y, dist.2$y), max(dist.1$y, dist.2$y) )
plot(dist.1, col='red', xlim=x.lim, ylim=y.lim, xlab='Gene 22', ylab='Density')
lines(dist.2, col='blue')
legend('topright', legend=c('Cluster 1', 'Cluster 2'), col=c('red', 'blue'), lwd=1)
pr = prcomp(gene)
gene.max = which.max( abs(pr$rotation[, 1]) )     # gene #22
clust = cutree(hc.cmp, 2)
dist.1 = density( as.numeric( gene[gene.max, which(clust==1) ] ) )
dist.2 = density( as.numeric( gene[gene.max, which(clust==2) ] ) )
x.lim = c( min(dist.1$x, dist.2$x), max(dist.1$x, dist.2$x) )
y.lim = c( min(dist.1$y, dist.2$y), max(dist.1$y, dist.2$y) )
plot(dist.1, col='red', xlim=x.lim, ylim=y.lim, xlab='Gene 22', ylab='Density', main='Gene 22 Density Plot')
lines(dist.2, col='blue')
legend('topright', legend=c('Cluster 1', 'Cluster 2'), col=c('red', 'blue'), lwd=1)
